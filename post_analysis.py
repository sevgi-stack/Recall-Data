import pandas as pd
import numpy as np

# Sample data from the provided table
data = {
    'participant number': [1],
    'age': [np.nan],
    'general_topic_total_seconds': [0.425575895],
    'general_topic_interval_count': [0.110249025],
    'general_topic_average_seconds': [0.295297541],
    'self_positive_total_seconds': [-0.071280152],
    'self_positive_interval_count': [-0.313419009],
    'self_positive_average_seconds': [0.057278147],
    'self_negative_total_seconds': [-0.016523807],
    'self_negative_interval_count': [-0.305663484],
    'self_negative_average_seconds': [0.029944254],
    'other_positive_total_seconds': [-0.008577614],
    'other_positive_interval_count': [-0.246290577],
    'other_positive_average_seconds': [0.041502766],
    'other_negative_total_seconds': [-0.03028909],
    'other_negative_interval_count': [-0.407409288],
    'other_negative_average_seconds': [0.137182664]
}

# Create DataFrame
df = pd.DataFrame(data)

# Since we have only one participant, correlation analysis wouldn't be meaningful.
# Let's simulate a correlation matrix based on provided correlation values.

# Provided correlation matrix
correlation_matrix = np.array([
    [1, 0.4256, 0.1102, 0.2953, -0.0713, -0.3134, 0.0573, -0.0165, -0.3057, 0.0299, -0.0086, -0.2463, 0.0415, -0.0303, -0.4074, 0.1372],
    [0.4256, 1, 0.6037, 0.7349, 0.2671, 0.0112, 0.3948, 0.3933, -0.0300, 0.3927, 0.1918, -0.2718, 0.2822, 0.1611, -0.2663, 0.2473],
    [0.1102, 0.6037, 1, 0.1182, 0.3229, 0.3444, 0.3175, 0.3079, 0.2905, 0.2047, 0.2052, -0.0461, 0.2835, 0.1331, 0.1063, 0.1114],
    [0.2953, 0.7349, 0.1182, 1, 0.3641, 0.0433, 0.4846, 0.5070, 0.0264, 0.4480, 0.2015, -0.1869, 0.2295, 0.2823, -0.2481, 0.3779],
    [-0.0713, 0.2671, 0.3229, 0.3641, 1, 0.6326, 0.8380, 0.7343, 0.4530, 0.4971, 0.2564, -0.1093, 0.3525, 0.3151, 0.0464, 0.3028],
    [-0.3134, 0.0112, 0.3444, 0.0433, 0.6326, 1, 0.2406, 0.4928, 0.7736, 0.2098, 0.1885, 0.3127, 0.0688, 0.1833, 0.4497, -0.0126],
    [0.0573, 0.3948, 0.3175, 0.4846, 0.8380, 0.2406, 1, 0.7175, 0.2382, 0.5609, 0.1348, -0.3217, 0.3592, 0.1355, -0.2219, 0.2859],
    [-0.0165, 0.3933, 0.3079, 0.5070, 0.7343, 0.4928, 0.7175, 1, 0.3551, 0.7956, 0.2593, -0.2074, 0.3536, 0.2355, -0.2143, 0.3634],
    [-0.3057, -0.0300, 0.2905, 0.0264, 0.4530, 0.7736, 0.2382, 0.3551, 1, -0.1140, -0.0049, 0.4122, -0.1034, 0.0599, 0.4252, -0.1001],
    [0.0299, 0.3927, 0.2047, 0.4480, 0.4971, 0.2098, 0.5609, 0.7956, -0.1140, 1, 0.2404, -0.2998, 0.3296, 0.1433, -0.3642, 0.3508],
    [-0.0086, 0.1918, 0.2052, 0.2015, 0.2564, 0.1885, 0.1348, 0.2593, -0.0049, 0.2404, 1, 0.2476, 0.8332, 0.8220, 0.2520, 0.7676],
    [-0.2463, -0.2718, -0.0461, -0.1869, -0.1093, 0.3127, -0.3217, -0.2074, 0.4122, -0.2998, 0.2476, 1, -0.2347, 0.2916, 0.6869, 0.0284],
    [0.0415, 0.2822, 0.2835, 0.2295, 0.3525, 0.0688, 0.3592, 0.3536, -0.1034, 0.3296, 0.8332, -0.2347, 1, 0.6518, -0.0245, 0.7616],
    [-0.0303, 0.1611, 0.1331, 0.2823, 0.3151, 0.1833, 0.1355, 0.2355, 0.0599, 0.1433, 0.8220, 0.2916, 0.6518, 1, 0.3237, 0.8556],
    [-0.4074, -0.2663, 0.1063, -0.2481, 0.0464, 0.4497, -0.2219, -0.2143, 0.4252, -0.3642, 0.2520, 0.6869, -0.0245, 0.3237, 1, -0.1141],
    [0.1372, 0.2473, 0.1114, 0.3779, 0.3028, -0.0126, 0.2859, 0.3634, -0.1001, 0.3508, 0.7676, 0.0284, 0.7616, 0.8556, -0.1141, 1]
])

# Convert to DataFrame for better readability
correlation_df = pd.DataFrame(correlation_matrix, columns=data.keys(), index=data.keys())

# Display correlation matrix
import ace_tools as tools; tools.display_dataframe_to_user("Correlation Matrix", correlation_df)
